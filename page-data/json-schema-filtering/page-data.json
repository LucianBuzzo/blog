{"componentChunkName":"component---src-templates-blog-post-js","path":"/json-schema-filtering/","result":{"data":{"site":{"siteMetadata":{"title":"Living Life on the Outside","author":"Lucian Buzzo"}},"markdownRemark":{"id":"394d1b2e-0bae-57de-94ea-aa13ec660e8d","excerpt":"Using  to remove undefined fields from an object,\nis a feature that crops up regularly in JSON schema libraries, but tends to have\nsome…","html":"<p>Using <code class=\"language-text\">additionalProperties: false</code> to remove undefined fields from an object,\nis a feature that crops up regularly in JSON schema libraries, but tends to have\nsome strange behaviors especially, once the <code class=\"language-text\">anyOf</code> keyword is used.\nThis article aims to specify the expected functionality of this feature and what\nrules it should follow when filtering across different branches of an <code class=\"language-text\">anyOf</code>\nkeyword.</p>\n<p>When filtering; an object that validates against the provided schema will have\nany undefined properties removed if <code class=\"language-text\">additionalProperties</code> is set to <code class=\"language-text\">false</code>.\nThis behaviour prevents the usual <code class=\"language-text\">additionalProperties: false</code> behaviour from\nworking. As such when validating an object to see if it is valid against the\nprovided schema, the value of <code class=\"language-text\">additionalProperties</code> should be evaluated as\nthough it were set to <code class=\"language-text\">true</code>.</p>\n<p>For example, this object:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span> bar\n<span class=\"token key atrule\">baz</span><span class=\"token punctuation\">:</span> buzz</code></pre></div>\n<p>Would normally fail validation against the following schema:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> foo\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>This is due to the presence of the additional undefined field <code class=\"language-text\">baz</code>. However\nbecause we want to remove undefined fields, rather than simply failing\nvalidation, when the object is validated, a modified version of the schema with\n<code class=\"language-text\">additionalProperties</code> set to true should be used. In the example schema above,\ninternally the filter implementation would validate using the schema:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> foo\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<p>The given object is valid against this modified schema, so the filtering logic\ncan now run using the original schema, removing the undefined property <code class=\"language-text\">baz</code>\nand resulting in a final object like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span> bar</code></pre></div>\n<p>To make an analogy, filtering behaves like a cookie cutter:</p>\n<ul>\n<li>There must be enough cookie dough to fill the cutter, otherwise, the dough is cannot be cut.</li>\n<li>If there is excess dough then it is cut away by the cutter.</li>\n</ul>\n<h2>A note on <code class=\"language-text\">required</code></h2>\n<p>If a field is <code class=\"language-text\">required</code>, but it is not defined in <code class=\"language-text\">properties</code>, it should not\nbe removed. The following two schemas are equivalent:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> foo\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> any\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> foo\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<h2>Evaluating <code class=\"language-text\">anyOf</code></h2>\n<p>When filtering using a schema containing <code class=\"language-text\">anyOf</code>, each branch of the <code class=\"language-text\">anyOf</code>\nshould be merged with top-level properties to create a new schema, which is then\nused to validate the object. If validation passes, then the schema can be used\nto filter the object.</p>\n<h3>Reconciling <code class=\"language-text\">additionalProperties</code> between <code class=\"language-text\">anyOf</code> branches and the top-level</h3>\n<p>When merging <code class=\"language-text\">additionalProperties</code>, they are combined using an <code class=\"language-text\">AND</code> operator,\nwhere the values are evaluated topmost first.\nThe following two schemas are equivalent:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Before merge</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">anyOf</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> slug\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># After merge</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n  <span class=\"token punctuation\">-</span> slug\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user\n  <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string</code></pre></div>\n<p>If the <code class=\"language-text\">anyOf</code> branch has <code class=\"language-text\">additionalProperties: false</code>, then the value of\n<code class=\"language-text\">properties</code> in the <code class=\"language-text\">anyOf</code> branch will overwrite the value of <code class=\"language-text\">properties</code> and\nthe top-level schema. This makes the following two schemas equivalent:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Before merge</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">anyOf</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> slug\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># After merge</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n  <span class=\"token punctuation\">-</span> slug\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string</code></pre></div>\n<p>This also applies to nested schemas in an <code class=\"language-text\">anyOf</code> branch. This behaviour allows\nyou to effectively “whitelist” fields inside an object using an <code class=\"language-text\">anyOf</code> branch.\nFor example:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Before merge</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">anyOf</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n      <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n        properties\n          <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n        <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span class=\"token punctuation\">,</span>\n        required\n          <span class=\"token punctuation\">-</span> email\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> slug\n      <span class=\"token punctuation\">-</span> data\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n  <span class=\"token punctuation\">-</span> data\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user\n  <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    properties\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span>\n    required\n      <span class=\"token punctuation\">-</span> password</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># After merge</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n  <span class=\"token punctuation\">-</span> slug\n  <span class=\"token punctuation\">-</span> data\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user\n  <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    properties\n      <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span class=\"token punctuation\">,</span>\n    required\n      <span class=\"token punctuation\">-</span> email</code></pre></div>\n<h3>Reconciling multiple matching <code class=\"language-text\">anyOf</code> branches</h3>\n<p>If more than one branch of <code class=\"language-text\">anyOf</code> matches the object being filtered, then the\nmatching branches are first merged together, and then merged with the top-level\nschema fields.\nWhen reconciling <code class=\"language-text\">additionalProperties</code> between <code class=\"language-text\">anyOf</code> branches, they are\ncombined using an <code class=\"language-text\">OR</code> operator,</p>\n<p>For example, given this object:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">45678</span>\n<span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> user\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'team'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>And the following schema:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">anyOf</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> number\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n<span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> type\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user</code></pre></div>\n<p>Both branches of the <code class=\"language-text\">anyOf</code> match the object, so they should be merged\ntogether:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n  <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> number\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<p>This schema is then merged with the top level:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n<span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user\n  <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n  <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> number\n<span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<p>This final schema is then used to filter the object, however in this case, the\n<code class=\"language-text\">additionalProperties</code> field is <code class=\"language-text\">true</code>, so no fields are removed from the\nobject.</p>\n<p>This behaviour makes the following two calls equivalent</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">Filter (\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">anyOf</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n        <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n        <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n        <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> number\n        <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> type\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n        <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user\n    <span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">45678</span>\n    <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> user\n    <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'team'</span> <span class=\"token punctuation\">]</span>\n)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">Filter (\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> object\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n        <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user\n      <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">const</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n      <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> number\n    <span class=\"token key atrule\">additionalProperties</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token number\">45678</span>\n    <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">-</span>guest\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> user\n    <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'team'</span> <span class=\"token punctuation\">]</span>\n)</code></pre></div>\n<p><strong>NOTE</strong>: This behaviour will change depending on the document being filtered, as\ndifferent documents will match different <code class=\"language-text\">anyOf</code> branches.</p>","frontmatter":{"title":"Definitions for filtering properties in JSON schema","date":"March 02, 2019"}}},"pageContext":{"slug":"/json-schema-filtering/","previous":{"fields":{"slug":"/mini-libs/"},"frontmatter":{"title":"Writing bad Javascript micro libraries"}},"next":{"fields":{"slug":"/exploring-cryptography-frequency-analysis/"},"frontmatter":{"title":"Exploring Cryptography - Frequency Analysis pt.2"}}}},"staticQueryHashes":[],"slicesMap":{}}